<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body class="container">

<header>
    <%- include('../partials/header'); %>
    <%- include('../partials/util'); %>
    <link href="https://cdn.quilljs.com/1.0.0/quill.snow.css" rel="stylesheet" />
    <style>
        .vimeo-full-width {
            padding: 56.25% 0 0 0;
            position: relative;
        }

        .vimeo-full-width iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .bar-wrap {
            padding: 6px;
            margin-top: 50px;
            border-radius: 100px;
            background-color: white;
        }

        .bar {
            width: 0%;
            height: 15px;
            transition: width .15s ease-out;
            background-color: #38b000;
            border-radius: 100px;
            box-shadow: inset -1px -1px 10px rgb(0 0 0 / .5);
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
</header>

<main>
    <h2><a href="/course/<%= course.id %>" class="nav-link"><%= course.title %> </a>><%= lecture.title %> </h2>
    <div class="vimeo-full-width">
        <iframe src="https://player.vimeo.com/video/<%= lecture.videoId %> " frameborder="0" webkitallowfullscreen="true" mozallowfullscreen="true" allowFullscreen></iframe>
    </div>

    <script src="https://player.vimeo.com/api/player.js"></script>
    <script>
    </script>

    <div id="quilljs-description" class="ql-container ql-snow ql-editor"></div>
    <p style="display: none" id="description-hidden"><%= lecture.description %></p>
    <div style="display: none">
        <div id="quill-render-hidden"></div>
    </div>
    
    <% if (profile.admin) { %>
        <div class="card">
            <form id="lecture-form" class="card-body">
                <h3>Update lecture</h3>
                <div class="form-group">
                <label for="title">Title</label>
                <input name="title" type="text" class="form-control" id="title" value="<%= lecture.title %> ">
                </div>
                <div class="form-group">
                <input name="description" type="hidden" class="form-control" id="description" value="<%= lecture.description %>">
                </div>
                <div id="editor" style="height: '25rem'"></div>
                </br>
                <button type="submit" class="btn btn-primary">Update</button>
            </form>
        </div>
        <div class="card">
            <form id="video-form" class="card-body">
                <h3>Upload video</h3>
                <div class="form-group">
                    <label for="video">Video</label>
                    <input name="video" type="file" accept=".mp4" class="form-control-file" id="video">
                </div>
                <div id="bar-wrap" class="bar-wrap">
                    <div id="bar" class="bar"></div>
                </div>
                <button type="submit" class="btn btn-primary">Upload</button>
            </form>

        </div>
    <% } %>
    </div>
</main>

<footer>
  <%- include('../partials/footer'); %>
</footer>

<%- include('../partials/firebase'); %>

<script src="https://cdn.quilljs.com/1.0.0/quill.js"></script>
<script>
    const descriptionRender = document.getElementById("quilljs-description")
    const descriotionHidden = document.getElementById("description-hidden")
    var renderEditor = new Quill('#quill-render-hidden', {
        modules: { toolbar: {"toolbar": false} },
        theme: 'snow',
    });
    var descriptionContent = {};
    try {
        descriptionContent = JSON.parse(descriotionHidden.innerText);
    } catch (e) {
        console.log(e);
    }
    renderEditor.setContents(descriptionContent);
    descriptionRender.innerHTML  = renderEditor.root.innerHTML ;
</script>

<% if (profile.admin) { %>
<script>
    const descriptionInput = document.getElementById("description")
    var toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        ['blockquote', 'code-block'],
    
        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
        [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
        [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
        [{ 'direction': 'rtl' }],                         // text direction
    
        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
    
        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
        [{ 'font': [] }],
        [{ 'align': [] }],
    
        ['clean']                                         // remove formatting button
    ];
    var editor = new Quill('#editor', {
        modules: { toolbar: toolbarOptions },
        theme: 'snow',
    });
    editor.on('text-change', function(delta, oldDelta, source) {
        descriptionInput.value = JSON.stringify(editor.getContents());
    });
    editor.setContents(renderEditor.getContents());
</script>
<script>
    const videoForm = document.getElementById("video-form")
    const bar = document.getElementById("bar");
    const barWrap = document.getElementById("bar-wrap");

    const ruleOfThree = (num1, num2) => {
        const proportion = (num2 * 100) / num1;
        return Math.round(proportion * 10) / 10;
    };

    const updateBarLength = (percentage) => {
        bar.style.width = percentage + "%";
    };

    function upload(event) {
        event.preventDefault()
        var formData = new FormData(document.querySelector('#video-form'))
        console.log(formData.values)
        $.ajax({
        xhr: function() {
            var xhr = new window.XMLHttpRequest();
            xhr.upload.addEventListener("progress", function(evt) {
                if (evt.lengthComputable) {
                    var percentComplete = (evt.loaded / evt.total) * 100;
                    console.log(`${evt.loaded}/${evt.total}`)
                    updateBarLength(percentComplete)
                }
            }, false);
            return xhr;
        },
        type: 'POST',
        url: "/admin/upload/lecture/<%= lecture.id %>/video",
        data: formData,
        contentType: false,
        processData: false,
        success: function(data){
            //Do something on success
            alert("Upload completed")
        }
    });
    }

    videoForm.addEventListener('submit', upload);
</script>
<script>
    const lectureForm = document.getElementById("lecture-form")
    async function updateLecture(event) {
        event.preventDefault()
        const formData = new FormData(lectureForm)
        var res = await fetch('/admin/lecture/<%=lecture.id%>/update',{
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ title: formData.get('title'), description: formData.get('description')})
        })
        location.reload();
    }
    lectureForm.addEventListener('submit', updateLecture)
</script>  
<% } %>
</body>
</html>